if &shell =~# 'fish$'
                                                                  set shell=sh
endif

set nocompatible              " be iMproved, required
filetype off
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'dag/vim-fish'
Plugin 'less.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'scrooloose/nerdcommenter'
Plugin 'surround.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'mattn/emmet-vim'
Plugin 'ryanoasis/vim-devicons'
Plugin 'mhinz/vim-startify'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
Plugin 'alvan/vim-closetag'
Plugin 'sheerun/vim-polyglot'
Plugin 'jeffkreeftmeijer/vim-dim'
Plugin 'noahfrederick/vim-noctu'
Plugin 'hzchirs/vim-material'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Put your non-Plugin stuff after this line

set encoding=utf-8
syntax on
colorscheme dim

" Normal backspace
set backspace=indent,eol,start	

" Line numbers
set relativenumber
set number

" Indent 
filetype plugin indent on
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set laststatus=2
set pastetoggle=<F10>
set guifont=Fira\ Code:h14
set virtualedit=all
:set wrap
:set linebreak
:set nolist  " list disables linebreak
map <C-n> :NERDTreeToggle<CR>

" Powerline
let g:airline_powerline_fonts=1

" Markdown fenced code blocks
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']

" Auto-close tags
let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.md'
let g:closetag_filetypes = 'html,xhtml,phtml,md'

let s:hidden_all = 0
function! ToggleHiddenAll()
    if s:hidden_all  == 0
        let s:hidden_all = 1
        set noshowmode
        set noruler
        set nonumber
        set norelativenumber
        set laststatus=0
        set noshowcmd
    else
        let s:hidden_all = 0
        set showmode
        set number
        set relativenumber
        set ruler
        set laststatus=2
        set showcmd
    endif
endfunction

nnoremap <S-h> :call ToggleHiddenAll()<CR>
